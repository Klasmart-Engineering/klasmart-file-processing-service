pipelines:
  branches:
    global/test:
      - step:
          name: "Compile"
          image: golang:alpine
          script:
            - apk add git --no-cache
            - set +x
            - echo "machine gitlab.badanamu.com.cn" >> ~/.netrc
            - echo "  login $GITLAB_USERNAME"       >> ~/.netrc
            - echo "  password $GITLAB_PASSWORD"    >> ~/.netrc
            - set -x
            - go env -w GO111MODULE=on
            - go env -w GOPRIVATE=gitlab.badanamu.com.cn
            - export GIT_TERMINAL_PROMPT=1
            - go get -v
            - go mod vendor
            - go build -o deploy/handler -ldflags "-X gitlab.badanamu.com.cn/calmisland/kidsloop-file-processing-service/constant.GitHash=$(git rev-list -1 HEAD) -X gitlab.badanamu.com.cn/calmisland/kidsloop-file-processing-service/constant.BuildTimestamp=$(date +%s)"
            - echo $BUILD_RESULT
          after-script:
            - BUILD_STATUS="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
            - pipe: atlassian/slack-notify:1.0.2
              variables:
                WEBHOOK_URL: $WEBHOOK_URL
                PRETEXT: '"$BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
                MESSAGE: "build has exited with [$BUILD_STATUS] status"
          caches:
            - gomodules

          artifacts:
            - deploy/*

      - step:
          name: "Build & Push Docker image"
          image: python:3.7.4-alpine3.10
          script:
            - pip3 install -U awscli

            - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
            - export REPO=$DOCKER_REPO_URL/kidsloop-file-processing-service # DOCKER_REPO_URL is workspace wide variable

            - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
            - aws s3 cp s3://$S3_BUCKET/keys/ deploy/ --recursive --sse aws:kms --sse-kms-key-id $KMS_KEY

            - docker build -t kidsloop-file-processing-service deploy/
            - docker tag kidsloop-file-processing-service:latest $REPO:$BRANCH_TAG
            - docker tag kidsloop-file-processing-service:latest $REPO:$BRANCH_TAG-latest
            - docker tag kidsloop-file-processing-service:latest $REPO:$BRANCH_TAG-$BITBUCKET_BUILD_NUMBER
            - docker tag kidsloop-file-processing-service:latest $REPO:$BRANCH_TAG-${BITBUCKET_COMMIT:0:7}

            - docker push $REPO:$BRANCH_TAG
            - docker push $REPO:$BRANCH_TAG-latest
            - docker push $REPO:$BRANCH_TAG-$BITBUCKET_BUILD_NUMBER
            - docker push $REPO:$BRANCH_TAG-${BITBUCKET_COMMIT:0:7}

            - export AWS_ACCESS_KEY_ID=$AWS_ALPHA_KEY_ID && export AWS_SECRET_ACCESS_KEY=$AWS_ALPHA_ACCESS_KEY && export AWS_DEFAULT_REGION=ap-northeast-2
            - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $DOCKER_ALPHA_REPO

            - docker tag kidsloop-file-processing-service:latest kidsloop-file-processing-service-alpha:latest
            - docker push kidsloop-file-processing-service-alpha:latest

          after-script:
            - BUILD_STATUS="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
            - pipe: atlassian/slack-notify:1.0.2
              variables:
                WEBHOOK_URL: $WEBHOOK_URL
                PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
                MESSAGE: "ECR push has exited with [$BUILD_STATUS] status"

          services:
            - docker

      - step:
          name: "Update ECS"
          image: python:3.7.4-alpine3.10
          script:
            - pip3 install -U awscli

            - apk add git jq --no-cache

            - assume_role=$(aws sts assume-role --role-arn arn:aws:iam::${ACC_ID}:role/cross_account_deployment_role --role-session-name deployment)

            - export AWS_ACCESS_KEY_ID=$(echo $assume_role | jq -r .Credentials.AccessKeyId) && export AWS_SECRET_ACCESS_KEY=$(echo $assume_role | jq -r .Credentials.SecretAccessKey) && export AWS_SESSION_TOKEN=$(echo $assume_role | jq -r .Credentials.SessionToken) && export AWS_DEFAULT_REGION=ap-northeast-2

            - aws ecs update-service --service arn:aws:ecs:${AWS_DEFAULT_REGION}:${ACC_ID}:service/${CLUSTER}/${CLUSTER}-file-processing-service --force-new-deployment --cluster $CLUSTER

          after-script:
            - BUILD_STATUS="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
            - pipe: atlassian/slack-notify:1.0.2
              variables:
                WEBHOOK_URL: $WEBHOOK_URL
                PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
                MESSAGE: "ECS update has exited with [$BUILD_STATUS] status"

definitions:
  caches:
    gomodules: vendor
